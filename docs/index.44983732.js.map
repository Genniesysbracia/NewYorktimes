{"mappings":"AAAA,MAAM,SAAS;AACf,MAAM,aAAa,CAAC,4DAA4D,EAAE,OAAO,CAAC;AAC1F,MAAM,eAAe,CAAC,kFAAkF,EAAE,OAAO,CAAC;AAElH,MAAM,mBAAmB,SAAS,aAAa,CAAC,kBAAkB,6CAA6C;AAC/G,MAAM,gBAAgB,SAAS,cAAc,CAAC,mBAAmB,iCAAiC;AAElG,iDAAiD;AACjD,eAAe;IACX,MAAM,iBAAiB,SAAS,aAAa,CAAC;IAC9C,eAAe,WAAW,GAAG;IAC7B,iBAAiB,WAAW,CAAC,iBAAiB,yBAAyB;IAEvE,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM,kCAAkC,SAAS,UAAU;QAGzE,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,wBAAwB;QACxB,iBAAiB,WAAW,CAAC;QAE7B,yBAAyB;QACzB,IAAI,CAAC,KAAK,OAAO,IAAI,KAAK,OAAO,CAAC,MAAM,KAAK,GAAG;YAC5C,MAAM,mBAAmB,SAAS,aAAa,CAAC;YAChD,iBAAiB,WAAW,GAAG;YAC/B,iBAAiB,WAAW,CAAC;YAC7B;QACJ;QAEA,2BAA2B;QAC3B,KAAK,OAAO,CAAC,OAAO,CAAC,CAAA;YACjB,MAAM,aAAa,SAAS,aAAa,CAAC;YAC1C,WAAW,SAAS,CAAC,GAAG,CAAC;YAEzB,+CAA+C;YAC/C,IAAI,QAAQ,UAAU,IAAI,QAAQ,UAAU,CAAC,MAAM,GAAG,GAAG;gBACrD,MAAM,MAAM,SAAS,aAAa,CAAC;gBACnC,IAAI,GAAG,GAAG,QAAQ,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,8CAA8C;gBACnF,IAAI,GAAG,GAAG,QAAQ,KAAK,EAAE,yBAAyB;gBAClD,IAAI,SAAS,CAAC,GAAG,CAAC,kBAAkB,oCAAoC;gBACxE,WAAW,WAAW,CAAC,MAAM,qCAAqC;YACtE;YAEA,MAAM,QAAQ,SAAS,aAAa,CAAC,OAAO,sBAAsB;YAClE,MAAM,WAAW,GAAG,QAAQ,KAAK;YAEjC,MAAM,WAAW,SAAS,aAAa,CAAC,MAAM,uBAAuB;YACrE,SAAS,WAAW,GAAG,QAAQ,QAAQ;YAEvC,MAAM,OAAO,SAAS,aAAa,CAAC,MAAM,2BAA2B;YACrE,KAAK,IAAI,GAAG,QAAQ,GAAG;YACvB,KAAK,WAAW,GAAG;YACnB,KAAK,MAAM,GAAG,UAAU,yBAAyB;YAEjD,WAAW,WAAW,CAAC;YACvB,WAAW,WAAW,CAAC;YACvB,WAAW,WAAW,CAAC;YAEvB,gEAAgE;YAChE,iBAAiB,WAAW,CAAC;QACjC;IAEJ,EAAE,OAAO,OAAO;QACZ,yCAAyC;QACzC,IAAI,iBAAiB,QAAQ,CAAC,iBAC1B,iBAAiB,WAAW,CAAC;QAGjC,uBAAuB;QACvB,MAAM,eAAe,SAAS,aAAa,CAAC;QAC5C,aAAa,WAAW,GAAG,6BAA6B,MAAM,OAAO;QACrE,iBAAiB,WAAW,CAAC;IACjC;AACJ;AAEA,iDAAiD;AACjD,eAAe;IACX,MAAM,iBAAiB,SAAS,aAAa,CAAC;IAC9C,eAAe,WAAW,GAAG;IAC7B,cAAc,WAAW,CAAC,iBAAiB,yBAAyB;IAEpE,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM,kCAAkC,SAAS,UAAU;QAEzE,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,cAAc,WAAW,CAAC,iBAAiB,gDAAgD;QAE3F,MAAM,QAAQ,KAAK,OAAO,CAAC,KAAK,EAAE,6CAA6C;QAE/E,oCAAoC;QACpC,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;YAC9B,cAAc,SAAS,GAAG;YAC1B;QACJ;QAEA,kCAAkC;QAClC,cAAc,SAAS,GAAG;QAE1B,uDAAuD;QACvD,MAAM,OAAO,CAAC,CAAA;YACV,MAAM,WAAW,SAAS,aAAa,CAAC;YACxC,SAAS,SAAS,CAAC,GAAG,CAAC,SAAS,6BAA6B;YAE7D,mBAAmB;YACnB,MAAM,YAAY,SAAS,aAAa,CAAC;YACzC,UAAU,GAAG,GAAG,KAAK,UAAU,IAAI,6BAA6B,sCAAsC;YACtG,UAAU,GAAG,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,YAAY,CAAC,EAAE,mCAAmC;YAChF,SAAS,WAAW,CAAC;YAErB,aAAa;YACb,MAAM,YAAY,SAAS,aAAa,CAAC;YACzC,UAAU,SAAS,CAAC,GAAG,CAAC;YACxB,UAAU,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,sBAAsB,KAAK,CAAC,EAAE,qBAAqB;YAC9F,SAAS,WAAW,CAAC;YAErB,cAAc;YACd,MAAM,aAAa,SAAS,aAAa,CAAC;YAC1C,WAAW,SAAS,CAAC,GAAG,CAAC;YACzB,WAAW,SAAS,GAAG,CAAC,MAAM,EAAE,KAAK,MAAM,IAAI,uBAAuB,IAAI,CAAC,EAAE,sBAAsB;YACnG,SAAS,WAAW,CAAC;YAErB,mBAAmB;YACnB,MAAM,kBAAkB,SAAS,aAAa,CAAC;YAC/C,gBAAgB,SAAS,CAAC,GAAG,CAAC;YAC9B,gBAAgB,SAAS,GAAG,CAAC,GAAG,EAAE,KAAK,WAAW,IAAI,6BAA6B,IAAI,CAAC,EAAE,sBAAsB;YAChH,SAAS,WAAW,CAAC;YAErB,qDAAqD;YACrD,cAAc,WAAW,CAAC;QAC9B;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wBAAwB;QACtC,cAAc,SAAS,GAAG,CAAC,wBAAwB,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC,EAAE,oCAAoC;IAClH;AACJ;AAEA,6DAA6D;AAC7D;AACA","sources":["src/script.js"],"sourcesContent":["const apiKey = '0fjovpveP6eGwWq0MsomPphDB6vQENK1'; \r\nconst topArtsUrl = `https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=${apiKey}`;\r\nconst reviewApiUrl = `https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=${apiKey}`;\r\n\r\nconst topArtsContainer = document.querySelector('.article-card'); // Make sure this matches your HTML structure\r\nconst reviewArticle = document.getElementById('review-article'); // Container for bestseller books\r\n\r\n// Function to fetch and display top arts stories\r\nasync function fetchTopArts() {\r\n    const loadingMessage = document.createElement('div');\r\n    loadingMessage.textContent = 'Loading top arts stories...';\r\n    topArtsContainer.appendChild(loadingMessage); // Append loading message\r\n\r\n    try {\r\n        const response = await fetch(topArtsUrl);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok: ' + response.statusText);\r\n        }\r\n        \r\n        const data = await response.json();\r\n\r\n        // Clear loading message\r\n        topArtsContainer.removeChild(loadingMessage);\r\n\r\n        // Check if results exist\r\n        if (!data.results || data.results.length === 0) {\r\n            const noResultsMessage = document.createElement('div');\r\n            noResultsMessage.textContent = 'No articles found.';\r\n            topArtsContainer.appendChild(noResultsMessage);\r\n            return;\r\n        }\r\n\r\n        // Display top arts stories\r\n        data.results.forEach(article => {\r\n            const articleDiv = document.createElement('div');\r\n            articleDiv.classList.add('card'); \r\n\r\n            // Create an image element if multimedia exists\r\n            if (article.multimedia && article.multimedia.length > 0) {\r\n                const img = document.createElement('img');\r\n                img.src = article.multimedia[0].url; // Use the first image in the multimedia array\r\n                img.alt = article.title; // Alt text for the image\r\n                img.classList.add('article-image'); // Add a class for styling if needed\r\n                articleDiv.appendChild(img); // Append the image to the articleDiv\r\n            }\r\n\r\n            const title = document.createElement('h3'); // Title for each card\r\n            title.textContent = article.title;\r\n\r\n            const abstract = document.createElement('p'); // Abstract/Description\r\n            abstract.textContent = article.abstract;\r\n\r\n            const link = document.createElement('a'); // Link to the full article\r\n            link.href = article.url;\r\n            link.textContent = 'Read more';\r\n            link.target = '_blank'; // Open link in a new tab\r\n\r\n            articleDiv.appendChild(title);\r\n            articleDiv.appendChild(abstract);\r\n            articleDiv.appendChild(link);\r\n\r\n            // Append the created article card to the article-card container\r\n            topArtsContainer.appendChild(articleDiv);\r\n        });\r\n\r\n    } catch (error) {\r\n        // Clear loading message in case of error\r\n        if (topArtsContainer.contains(loadingMessage)) {\r\n            topArtsContainer.removeChild(loadingMessage);\r\n        }\r\n\r\n        // Handle error message\r\n        const errorMessage = document.createElement('div');\r\n        errorMessage.textContent = 'Error loading articles: ' + error.message;\r\n        topArtsContainer.appendChild(errorMessage);\r\n    }\r\n}\r\n\r\n// Function to fetch and display bestseller books\r\nasync function fetchBestsellerBooks() {\r\n    const loadingMessage = document.createElement('div');\r\n    loadingMessage.textContent = 'Loading bestseller books...';\r\n    reviewArticle.appendChild(loadingMessage); // Append loading message\r\n\r\n    try {\r\n        const response = await fetch(reviewApiUrl);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok: ' + response.statusText);\r\n        }\r\n        const data = await response.json();\r\n\r\n        reviewArticle.removeChild(loadingMessage); // Remove loading message after successful fetch\r\n\r\n        const books = data.results.books; // Fetch the array of books from the response\r\n\r\n        // Check if the books array is empty\r\n        if (!books || books.length === 0) {\r\n            reviewArticle.innerHTML = '<p>No books found.</p>';\r\n            return;\r\n        }\r\n\r\n        // Clear previous content (if any)\r\n        reviewArticle.innerHTML = '';\r\n\r\n        // Iterate over the books and create cards for each one\r\n        books.forEach(book => {\r\n            const bookCard = document.createElement('div');\r\n            bookCard.classList.add('card'); // Add card class for styling\r\n\r\n            // Book cover image\r\n            const bookImage = document.createElement('img');\r\n            bookImage.src = book.book_image || 'placeholder_image_url.jpg'; // Add a fallback image if none exists\r\n            bookImage.alt = `${book.title} cover image`; // Set alt text with the book title\r\n            bookCard.appendChild(bookImage);\r\n\r\n            // Book title\r\n            const bookTitle = document.createElement('div');\r\n            bookTitle.classList.add('bookTitle');\r\n            bookTitle.innerHTML = `<h3>${book.title || 'Title not available'}</h3>`; // Display book title\r\n            bookCard.appendChild(bookTitle);\r\n\r\n            // Book author\r\n            const bookAuthor = document.createElement('div');\r\n            bookAuthor.classList.add('bookAuthor');\r\n            bookAuthor.innerHTML = `<p>by ${book.author || 'Author not available'}</p>`; // Display author name\r\n            bookCard.appendChild(bookAuthor);\r\n\r\n            // Book description\r\n            const bookDescription = document.createElement('div');\r\n            bookDescription.classList.add('bookDescription');\r\n            bookDescription.innerHTML = `<p>${book.description || 'Description not available.'}</p>`; // Display description\r\n            bookCard.appendChild(bookDescription);\r\n\r\n            // Append the book card to the review article section\r\n            reviewArticle.appendChild(bookCard);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        reviewArticle.innerHTML = `<p>Error loading books: ${error.message}</p>`; // Show error message if fetch fails\r\n    }\r\n}\r\n\r\n// Call the functions to fetch and display articles and books\r\nfetchTopArts();\r\nfetchBestsellerBooks();\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}