{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["const apiKey = \"0fjovpveP6eGwWq0MsomPphDB6vQENK1\";\nconst topArtsUrl = `https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=${apiKey}`;\nconst reviewApiUrl = `https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=${apiKey}`;\nconst topArtsContainer = document.querySelector(\".article-card\"); // Make sure this matches your HTML structure\nconst reviewArticle = document.getElementById(\"review-article\"); // Container for bestseller books\n// Function to fetch and display top arts stories\nasync function fetchTopArts() {\n    const loadingMessage = document.createElement(\"div\");\n    loadingMessage.textContent = \"Loading top arts stories...\";\n    topArtsContainer.appendChild(loadingMessage); // Append loading message\n    try {\n        const response = await fetch(topArtsUrl);\n        if (!response.ok) throw new Error(\"Network response was not ok: \" + response.statusText);\n        const data = await response.json();\n        // Clear loading message\n        topArtsContainer.removeChild(loadingMessage);\n        // Check if results exist\n        if (!data.results || data.results.length === 0) {\n            const noResultsMessage = document.createElement(\"div\");\n            noResultsMessage.textContent = \"No articles found.\";\n            topArtsContainer.appendChild(noResultsMessage);\n            return;\n        }\n        // Display top arts stories\n        data.results.forEach((article)=>{\n            const articleDiv = document.createElement(\"div\");\n            articleDiv.classList.add(\"card\"); // Use .card styling\n            // Create an image element if multimedia exists\n            if (article.multimedia && article.multimedia.length > 0) {\n                const img = document.createElement(\"img\");\n                img.src = article.multimedia[0].url; // Use the first image in the multimedia array\n                img.alt = article.title; // Alt text for the image\n                img.classList.add(\"article-image\"); // Add a class for styling if needed\n                articleDiv.appendChild(img); // Append the image to the articleDiv\n            }\n            const title = document.createElement(\"h3\"); // Title for each card\n            title.textContent = article.title;\n            const abstract = document.createElement(\"p\"); // Abstract/Description\n            abstract.textContent = article.abstract;\n            const link = document.createElement(\"a\"); // Link to the full article\n            link.href = article.url;\n            link.textContent = \"Read more\";\n            link.target = \"_blank\"; // Open link in a new tab\n            articleDiv.appendChild(title);\n            articleDiv.appendChild(abstract);\n            articleDiv.appendChild(link);\n            // Append the created article card to the article-card container\n            topArtsContainer.appendChild(articleDiv);\n        });\n    } catch (error) {\n        // Clear loading message in case of error\n        if (topArtsContainer.contains(loadingMessage)) topArtsContainer.removeChild(loadingMessage);\n        // Handle error message\n        const errorMessage = document.createElement(\"div\");\n        errorMessage.textContent = \"Error loading articles: \" + error.message;\n        topArtsContainer.appendChild(errorMessage);\n    }\n}\n// Function to fetch and display bestseller books\nasync function fetchBestsellerBooks() {\n    const loadingMessage = document.createElement(\"div\");\n    loadingMessage.textContent = \"Loading bestseller books...\";\n    reviewArticle.appendChild(loadingMessage); // Append loading message\n    try {\n        const response = await fetch(reviewApiUrl);\n        if (!response.ok) throw new Error(\"Network response was not ok: \" + response.statusText);\n        const data = await response.json();\n        reviewArticle.removeChild(loadingMessage); // Remove loading message after successful fetch\n        const books = data.results.books; // Fetch the array of books from the response\n        // Check if the books array is empty\n        if (!books || books.length === 0) {\n            reviewArticle.innerHTML = \"<p>No books found.</p>\";\n            return;\n        }\n        // Clear previous content (if any)\n        reviewArticle.innerHTML = \"\";\n        // Iterate over the books and create cards for each one\n        books.forEach((book)=>{\n            const bookCard = document.createElement(\"div\");\n            bookCard.classList.add(\"card\"); // Add card class for styling\n            // Book cover image\n            const bookImage = document.createElement(\"img\");\n            bookImage.src = book.book_image || \"placeholder_image_url.jpg\"; // Add a fallback image if none exists\n            bookImage.alt = `${book.title} cover image`; // Set alt text with the book title\n            bookCard.appendChild(bookImage);\n            // Book title\n            const bookTitle = document.createElement(\"div\");\n            bookTitle.classList.add(\"bookTitle\");\n            bookTitle.innerHTML = `<h3>${book.title || \"Title not available\"}</h3>`; // Display book title\n            bookCard.appendChild(bookTitle);\n            // Book author\n            const bookAuthor = document.createElement(\"div\");\n            bookAuthor.classList.add(\"bookAuthor\");\n            bookAuthor.innerHTML = `<p>by ${book.author || \"Author not available\"}</p>`; // Display author name\n            bookCard.appendChild(bookAuthor);\n            // Book description\n            const bookDescription = document.createElement(\"div\");\n            bookDescription.classList.add(\"bookDescription\");\n            bookDescription.innerHTML = `<p>${book.description || \"Description not available.\"}</p>`; // Display description\n            bookCard.appendChild(bookDescription);\n            // Append the book card to the review article section\n            reviewArticle.appendChild(bookCard);\n        });\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        reviewArticle.innerHTML = `<p>Error loading books: ${error.message}</p>`; // Show error message if fetch fails\n    }\n}\n// Call the functions to fetch and display articles and books\nfetchTopArts();\nfetchBestsellerBooks();\n\n//# sourceMappingURL=index.5a74550a.js.map\n","const apiKey = '0fjovpveP6eGwWq0MsomPphDB6vQENK1'; \r\nconst topArtsUrl = `https://api.nytimes.com/svc/topstories/v2/arts.json?api-key=${apiKey}`;\r\nconst reviewApiUrl = `https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=${apiKey}`;\r\n\r\nconst topArtsContainer = document.querySelector('.article-card'); // Make sure this matches your HTML structure\r\nconst reviewArticle = document.getElementById('review-article'); // Container for bestseller books\r\n\r\n// Function to fetch and display top arts stories\r\nasync function fetchTopArts() {\r\n    const loadingMessage = document.createElement('div');\r\n    loadingMessage.textContent = 'Loading top arts stories...';\r\n    topArtsContainer.appendChild(loadingMessage); // Append loading message\r\n\r\n    try {\r\n        const response = await fetch(topArtsUrl);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok: ' + response.statusText);\r\n        }\r\n        \r\n        const data = await response.json();\r\n\r\n        // Clear loading message\r\n        topArtsContainer.removeChild(loadingMessage);\r\n\r\n        // Check if results exist\r\n        if (!data.results || data.results.length === 0) {\r\n            const noResultsMessage = document.createElement('div');\r\n            noResultsMessage.textContent = 'No articles found.';\r\n            topArtsContainer.appendChild(noResultsMessage);\r\n            return;\r\n        }\r\n\r\n        // Display top arts stories\r\n        data.results.forEach(article => {\r\n            const articleDiv = document.createElement('div');\r\n            articleDiv.classList.add('card'); // Use .card styling\r\n\r\n            // Create an image element if multimedia exists\r\n            if (article.multimedia && article.multimedia.length > 0) {\r\n                const img = document.createElement('img');\r\n                img.src = article.multimedia[0].url; // Use the first image in the multimedia array\r\n                img.alt = article.title; // Alt text for the image\r\n                img.classList.add('article-image'); // Add a class for styling if needed\r\n                articleDiv.appendChild(img); // Append the image to the articleDiv\r\n            }\r\n\r\n            const title = document.createElement('h3'); // Title for each card\r\n            title.textContent = article.title;\r\n\r\n            const abstract = document.createElement('p'); // Abstract/Description\r\n            abstract.textContent = article.abstract;\r\n\r\n            const link = document.createElement('a'); // Link to the full article\r\n            link.href = article.url;\r\n            link.textContent = 'Read more';\r\n            link.target = '_blank'; // Open link in a new tab\r\n\r\n            articleDiv.appendChild(title);\r\n            articleDiv.appendChild(abstract);\r\n            articleDiv.appendChild(link);\r\n\r\n            // Append the created article card to the article-card container\r\n            topArtsContainer.appendChild(articleDiv);\r\n        });\r\n\r\n    } catch (error) {\r\n        // Clear loading message in case of error\r\n        if (topArtsContainer.contains(loadingMessage)) {\r\n            topArtsContainer.removeChild(loadingMessage);\r\n        }\r\n\r\n        // Handle error message\r\n        const errorMessage = document.createElement('div');\r\n        errorMessage.textContent = 'Error loading articles: ' + error.message;\r\n        topArtsContainer.appendChild(errorMessage);\r\n    }\r\n}\r\n\r\n// Function to fetch and display bestseller books\r\nasync function fetchBestsellerBooks() {\r\n    const loadingMessage = document.createElement('div');\r\n    loadingMessage.textContent = 'Loading bestseller books...';\r\n    reviewArticle.appendChild(loadingMessage); // Append loading message\r\n\r\n    try {\r\n        const response = await fetch(reviewApiUrl);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok: ' + response.statusText);\r\n        }\r\n        const data = await response.json();\r\n\r\n        reviewArticle.removeChild(loadingMessage); // Remove loading message after successful fetch\r\n\r\n        const books = data.results.books; // Fetch the array of books from the response\r\n\r\n        // Check if the books array is empty\r\n        if (!books || books.length === 0) {\r\n            reviewArticle.innerHTML = '<p>No books found.</p>';\r\n            return;\r\n        }\r\n\r\n        // Clear previous content (if any)\r\n        reviewArticle.innerHTML = '';\r\n\r\n        // Iterate over the books and create cards for each one\r\n        books.forEach(book => {\r\n            const bookCard = document.createElement('div');\r\n            bookCard.classList.add('card'); // Add card class for styling\r\n\r\n            // Book cover image\r\n            const bookImage = document.createElement('img');\r\n            bookImage.src = book.book_image || 'placeholder_image_url.jpg'; // Add a fallback image if none exists\r\n            bookImage.alt = `${book.title} cover image`; // Set alt text with the book title\r\n            bookCard.appendChild(bookImage);\r\n\r\n            // Book title\r\n            const bookTitle = document.createElement('div');\r\n            bookTitle.classList.add('bookTitle');\r\n            bookTitle.innerHTML = `<h3>${book.title || 'Title not available'}</h3>`; // Display book title\r\n            bookCard.appendChild(bookTitle);\r\n\r\n            // Book author\r\n            const bookAuthor = document.createElement('div');\r\n            bookAuthor.classList.add('bookAuthor');\r\n            bookAuthor.innerHTML = `<p>by ${book.author || 'Author not available'}</p>`; // Display author name\r\n            bookCard.appendChild(bookAuthor);\r\n\r\n            // Book description\r\n            const bookDescription = document.createElement('div');\r\n            bookDescription.classList.add('bookDescription');\r\n            bookDescription.innerHTML = `<p>${book.description || 'Description not available.'}</p>`; // Display description\r\n            bookCard.appendChild(bookDescription);\r\n\r\n            // Append the book card to the review article section\r\n            reviewArticle.appendChild(bookCard);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        reviewArticle.innerHTML = `<p>Error loading books: ${error.message}</p>`; // Show error message if fetch fails\r\n    }\r\n}\r\n\r\n// Call the functions to fetch and display articles and books\r\nfetchTopArts();\r\nfetchBestsellerBooks();\r\n"],"names":["apiKey","topArtsUrl","reviewApiUrl","topArtsContainer","document","querySelector","reviewArticle","getElementById","fetchBestsellerBooks","loadingMessage","createElement","textContent","appendChild","response","fetch","ok","Error","statusText","data","json","removeChild","books","results","length","innerHTML","forEach","book","bookCard","classList","add","bookImage","src","book_image","alt","title","bookTitle","bookAuthor","author","bookDescription","description","error","console","message","fetchTopArts","noResultsMessage","article","articleDiv","multimedia","img","url","abstract","link","href","target","contains","errorMessage"],"version":3,"file":"index.5a74550a.js.map"}